version: "3.7"

services:
  resource-db:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: ${RESOURCE_DB_NAME}
      POSTGRES_USER: ${RESOURCE_DB_USERNAME}
      POSTGRES_PASSWORD: ${RESOURCE_DB_PASSWORD}
    ports:
      - "${RESOURCE_DB_PORT}:5432"
    volumes:
      - ./init-scripts/resource-db/init.sql:/docker-entrypoint-initdb.d/init.sql

  song-db:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: ${SONG_DB_NAME}
      POSTGRES_USER: ${SONG_DB_USERNAME}
      POSTGRES_PASSWORD: ${SONG_DB_PASSWORD}
    ports:
      - "${SONG_DB_PORT}:5432"
    volumes:
      - ./init-scripts/song-db/init.sql:/docker-entrypoint-initdb.d/init.sql

  eureka-server:
    build:
      context: ./eureka-server
    ports:
      - "${EUREKA_SERVER_PORT}:8761"

  resource-service:
    build:
      context: ./resource-service
    environment:
      SPRING_DATASOURCE_URL: ${RESOURCE_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${RESOURCE_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${RESOURCE_DB_PASSWORD}
      EUREKA_SERVER_URL: ${EUREKA_SERVER_URL}
    ports:
      - "${RESOURCE_SERVICE_PORT}:8083"
    depends_on:
      - resource-db
      - eureka-server
      - song-service

  song-service:
    build:
      context: ./song-service
    environment:
      SPRING_DATASOURCE_URL: ${SONG_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${SONG_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SONG_DB_PASSWORD}
      EUREKA_SERVER_URL: ${EUREKA_SERVER_URL}
    deploy:
      replicas: 2
    ports:
      - "${SONG_SERVICE_PORTS}:8084"
    depends_on:
      - song-db
      - eureka-server
